import { Elements, OnConnectEndFunc, OnConnectFunc, OnConnectStartFunc, OnConnectStopFunc, NodeDimensionUpdate, NodePosUpdate, NodeDiffUpdate, XYPosition, Transform, Dimensions, InitD3ZoomPayload, TranslateExtent, SetConnectionId, SnapGrid, ConnectionMode } from '../types';
import { ActionTypes } from './action-types';
export declare const setOnConnect: (onConnect: OnConnectFunc) => ActionTypes;
export declare const setOnConnectStart: (onConnectStart: OnConnectStartFunc) => ActionTypes;
export declare const setOnConnectStop: (onConnectStop: OnConnectStopFunc) => ActionTypes;
export declare const setOnConnectEnd: (onConnectEnd: OnConnectEndFunc) => ActionTypes;
export declare const setElements: (elements: Elements<any>) => ActionTypes;
export declare const batchUpdateNodeDimensions: (updates: NodeDimensionUpdate[]) => ActionTypes;
export declare const updateNodeDimensions: (payload: NodeDimensionUpdate) => ActionTypes;
export declare const updateNodePos: (payload: NodePosUpdate) => ActionTypes;
export declare const updateNodePosDiff: (payload: NodeDiffUpdate) => ActionTypes;
export declare const setUserSelection: (mousePos: XYPosition) => ActionTypes;
export declare const updateUserSelection: (mousePos: XYPosition) => ActionTypes;
export declare const unsetUserSelection: () => ActionTypes;
export declare const setSelection: (selectionActive: boolean) => ActionTypes;
export declare const unsetNodesSelection: () => ActionTypes;
export declare const resetSelectedElements: () => ActionTypes;
export declare const setSelectedElements: (elements: Elements<any>) => ActionTypes;
export declare const addSelectedElements: (elements: Elements<any>) => ActionTypes;
export declare const updateTransform: (transform: Transform) => ActionTypes;
export declare const updateSize: (size: Dimensions) => ActionTypes;
export declare const initD3Zoom: (payload: InitD3ZoomPayload) => ActionTypes;
export declare const setMinZoom: (minZoom: number) => ActionTypes;
export declare const setMaxZoom: (maxZoom: number) => ActionTypes;
export declare const setTranslateExtent: (translateExtent: TranslateExtent) => ActionTypes;
export declare const setConnectionPosition: (connectionPosition: XYPosition) => ActionTypes;
export declare const setConnectionNodeId: (payload: SetConnectionId) => ActionTypes;
export declare const setSnapToGrid: (snapToGrid: boolean) => ActionTypes;
export declare const setSnapGrid: (snapGrid: SnapGrid) => ActionTypes;
export declare const setInteractive: (isInteractive: boolean) => ActionTypes;
export declare const setNodesDraggable: (nodesDraggable: boolean) => ActionTypes;
export declare const setNodesConnectable: (nodesConnectable: boolean) => ActionTypes;
export declare const setElementsSelectable: (elementsSelectable: boolean) => ActionTypes;
export declare const setMultiSelectionActive: (multiSelectionActive: boolean) => ActionTypes;
export declare const setConnectionMode: (connectionMode: ConnectionMode) => ActionTypes;
export declare const actions: {
    setOnConnect: (onConnect: OnConnectFunc) => ActionTypes;
    setOnConnectStart: (onConnectStart: OnConnectStartFunc) => ActionTypes;
    setOnConnectStop: (onConnectStop: OnConnectStopFunc) => ActionTypes;
    setOnConnectEnd: (onConnectEnd: OnConnectEndFunc) => ActionTypes;
    setElements: (elements: Elements<any>) => ActionTypes;
    batchUpdateNodeDimensions: (updates: NodeDimensionUpdate[]) => ActionTypes;
    updateNodeDimensions: (payload: NodeDimensionUpdate) => ActionTypes;
    updateNodePos: (payload: NodePosUpdate) => ActionTypes;
    updateNodePosDiff: (payload: NodeDiffUpdate) => ActionTypes;
    setUserSelection: (mousePos: XYPosition) => ActionTypes;
    updateUserSelection: (mousePos: XYPosition) => ActionTypes;
    unsetUserSelection: () => ActionTypes;
    setSelection: (selectionActive: boolean) => ActionTypes;
    unsetNodesSelection: () => ActionTypes;
    resetSelectedElements: () => ActionTypes;
    setSelectedElements: (elements: Elements<any>) => ActionTypes;
    addSelectedElements: (elements: Elements<any>) => ActionTypes;
    updateTransform: (transform: Transform) => ActionTypes;
    updateSize: (size: Dimensions) => ActionTypes;
    initD3Zoom: (payload: InitD3ZoomPayload) => ActionTypes;
    setMinZoom: (minZoom: number) => ActionTypes;
    setMaxZoom: (maxZoom: number) => ActionTypes;
    setTranslateExtent: (translateExtent: TranslateExtent) => ActionTypes;
    setConnectionPosition: (connectionPosition: XYPosition) => ActionTypes;
    setConnectionNodeId: (payload: SetConnectionId) => ActionTypes;
    setSnapToGrid: (snapToGrid: boolean) => ActionTypes;
    setSnapGrid: (snapGrid: SnapGrid) => ActionTypes;
    setInteractive: (isInteractive: boolean) => ActionTypes;
    setNodesDraggable: (nodesDraggable: boolean) => ActionTypes;
    setNodesConnectable: (nodesConnectable: boolean) => ActionTypes;
    setElementsSelectable: (elementsSelectable: boolean) => ActionTypes;
    setMultiSelectionActive: (multiSelectionActive: boolean) => ActionTypes;
    setConnectionMode: (connectionMode: ConnectionMode) => ActionTypes;
};
