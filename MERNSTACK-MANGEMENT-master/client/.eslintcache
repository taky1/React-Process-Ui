[{"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\App.js":"1","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\testt\\Modal1.js":"2","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\Mern\\constants\\actionTypes.js":"3","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\components\\Grid\\Box.js":"4","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\components\\Grid\\FlowP.js":"5","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\components\\Grid\\Dustbin.js":"6","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\components\\Grid\\Main.js":"7","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\index.js":"8","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\components\\Grid\\ItemTypes.js":"9","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\Mern\\api\\index.js":"10","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\testt\\Test.js":"11","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\Mern\\reducers\\posts.js":"12","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\Mern\\actions\\posts.js":"13"},{"size":435,"mtime":1612124900966,"results":"14","hashOfConfig":"15"},{"size":2751,"mtime":1612083145000,"results":"16","hashOfConfig":"15"},{"size":104,"mtime":1612083145000,"results":"17","hashOfConfig":"15"},{"size":642,"mtime":1612275104396,"results":"18","hashOfConfig":"15"},{"size":2981,"mtime":1612342156178,"results":"19","hashOfConfig":"15"},{"size":1178,"mtime":1612188942244,"results":"20","hashOfConfig":"15"},{"size":2516,"mtime":1612189048172,"results":"21","hashOfConfig":"15"},{"size":455,"mtime":1612083145000,"results":"22","hashOfConfig":"15"},{"size":49,"mtime":1612083145000,"results":"23","hashOfConfig":"15"},{"size":275,"mtime":1612083145000,"results":"24","hashOfConfig":"15"},{"size":6626,"mtime":1612083145000,"results":"25","hashOfConfig":"15"},{"size":455,"mtime":1612083145000,"results":"26","hashOfConfig":"15"},{"size":758,"mtime":1612083145000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"at3ojo",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\App.js",[],["61","62"],"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\testt\\Modal1.js",[],["63","64"],"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\Mern\\constants\\actionTypes.js",[],["65","66"],"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\components\\Grid\\Box.js",["67"],"import React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes';\n\nexport const Box = ({ iconToShow,name,color}) => {\n    const [{ isDragging }, drag] = useDrag({\n        item: { name, type: ItemTypes.BOX,color },\n        end: (item, monitor) => {\n            const dropResult = monitor.getDropResult();\n             if (item && dropResult) {\n              }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n    \n    const opacity = isDragging ? 0.4 : 1;\n    return (<div ref={drag}  style={{display:\"block\"}} >\n\t\t\t{iconToShow}\n\t\t</div>);\n};\n","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\components\\Grid\\FlowP.js",["68","69","70"],"import React, { useEffect, useState } from \"react\";\nimport ReactFlow, {\n  removeElements,\n  updateEdge,\n  addEdge,\n  MiniMap,\n} from \"react-flow-renderer\";\nimport AssignmentIndTwoToneIcon from \"@material-ui/icons/AssignmentIndTwoTone\";\n\nimport CalendarTodayTwoToneIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport LaunchSharpIcon from \"@material-ui/icons/LaunchSharp\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\n\n\nconst onLoad = (reactFlowInstance) => {\n  console.log(\"flow loaded:\", reactFlowInstance);\n  reactFlowInstance.fitView();\n};\n\nconst onElementClick = (event, elementt) => console.log('click', elementt);\n\nconst OverviewFlow = (p) => {\n  console.log(\"p\", p);\n\n  const Elem = [\n    {\n      id: \"1\",\n      type: \"input\",\n      data: {\n        label: <>W</>,\n      },\n      position: { x: 250, y: 250 },\n    },\n  ];\n\n  const [elements, setElements] = useState(Elem);\n  const onEdgeUpdate = (oldEdge, newConnection) =>\n    setElements((els) => updateEdge(oldEdge, newConnection, els));\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\n \n\n  useEffect(() => {\n    console.log(elements);\n    let el = [];\n    p.list.map((items, index) => {\n      let ObjeTopush = {\n        id: index.toString(),\n        type: \"default\",\n        data: {\n          label: (\n            <>\n              {items.item.name === \"MailOutlineIcon\" ? (\n                <MailOutlineIcon style={{ fontSize: 20, color: \"#002984\" }} />\n              ) : items.item.name === \"CalendarTodayTwoToneIcon\" ? (\n                <CalendarTodayTwoToneIcon\n                  style={{ color: \"#eec360\", fontSize: 20 }}\n                />\n              ) : items.item.name === \"LaunchSharpIcon\" ? (\n                <LaunchSharpIcon style={{ fontSize: 20, color: \"#93d2f0\" }} />\n              ) : items.item.name === \"AssignmentIndTwoToneIcon\" ? (\n                <AssignmentIndTwoToneIcon\n                  style={{ fontSize: 20, color: \"#adee82\" }}\n                />\n              ) : null}\n            </>\n          ),\n        },\n        position: { x: items.offset.x - 380, y: items.offset.y + 20 },\n      };\n      el.push(ObjeTopush);\n    });\n    setElements(el);\n\n    console.log(\"success\");\n  }, [p]);\n  return (\n    <ReactFlow\n      elements={elements}\n      onElementClick={onElementClick}\n      onEdgeUpdate={onEdgeUpdate}\n      onConnect={onConnect}\n      onLoad={onLoad}\n      snapToGrid={true}\n      snapGrid={[15, 15]}\n    >\n      <MiniMap\n        nodeStrokeColor={(n) => {\n          if (n.style?.background) return n.style.background;\n          if (n.type === \"input\") return \"#0041d0\";\n          if (n.type === \"output\") return \"#ff0072\";\n          if (n.type === \"default\") return \"#ff0072\";\n          return \"#eee\";\n        }}\n\n        nodeColor={(n) => {\n          if (n.style?.background) return n.style.background;\n          return \"#fff\";\n        }}\n        nodeBorderRadius={2}\n      />\n    </ReactFlow>\n  );\n};\nexport default OverviewFlow;\n","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\components\\Grid\\Dustbin.js",["71","72"],"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\components\\Grid\\Main.js",["73"],"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\index.js",[],"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\components\\Grid\\ItemTypes.js",[],["74","75"],"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\Mern\\api\\index.js",[],"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\testt\\Test.js",["76","77","78"],"import React from \"react\";\nimport ColorPicker, { useColor } from \"react-color-palette\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\nimport EmailOutlinedIcon from \"@material-ui/icons/EmailOutlined\";\nimport EventAvailableOutlinedIcon from \"@material-ui/icons/EventAvailableOutlined\";\nimport PeopleOutlinedIcon from \"@material-ui/icons/PeopleOutlined\";\nimport PersonAddOutlinedIcon from \"@material-ui/icons/PersonAddOutlined\";\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"auto\",\n    width: \"fit-content\",\n\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n    minWidth: 120,\n  },\n\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    margin: theme.spacing(2),\n\n    minWidth: 250,\n  },\n}));\n\nexport default function Test() {\n  const [color, setColor] = useColor(\"hex\", \"#121212\");\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState(\"sm\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <React.Fragment>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n          Update Task\n        </Button>\n        <Dialog\n          fullWidth={fullWidth}\n          maxWidth={maxWidth}\n          open={open}\n          onClose={handleClose}\n        >\n          <DialogTitle>Update Task</DialogTitle>\n          <DialogContent>\n            <form className={classes.form} noValidate>\n              <InputLabel id=\"Title\" Text=\"Title\">\n                Title *\n              </InputLabel>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Title\"\n                variant=\"outlined\"\n                fullWidth\n              />\n              {/*Update Form */}\n              <InputLabel id=\"Form\" Text=\"Form\">\n                Form *\n              </InputLabel>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"Form\">Form</InputLabel>\n                <Select labelId=\"Form\" id=\"Form\" label=\"Form\">\n                  <MenuItem value=\"\" />\n                  <MenuItem value=\"Caree\">Care</MenuItem>\n                  <MenuItem value=\"Cercle\">Cercle</MenuItem>\n                  <MenuItem value=\"Pentagone\">Pentagone</MenuItem>\n                </Select>\n              </FormControl>\n              {/*Update Icon */}\n              <InputLabel id=\"Icon\" Text=\"Icon\">\n                Icon *\n              </InputLabel>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"Icon\">Icon</InputLabel>\n                <Select labelId=\"Icon\" id=\"Icon\" label=\"Form\">\n                  <MenuItem value=\"\" />\n                  <MenuItem value=\"User\">\n                    {\" \"}\n                    <PersonOutlineOutlinedIcon /> User\n                  </MenuItem>\n                  <MenuItem value=\"Email\">\n                    <EmailOutlinedIcon />Email\n                  </MenuItem>\n                  <MenuItem value=\"AddUser\">\n                    <PersonAddOutlinedIcon />AddUser\n                  </MenuItem>\n                  <MenuItem value=\"Calendar\">\n                    <CalendarTodayOutlinedIcon />Calendar\n                  </MenuItem>\n                  <MenuItem value=\"Group\">\n                    <PeopleOutlinedIcon />Group\n                  </MenuItem>\n                  <MenuItem value=\"Event\">\n                    <EventAvailableOutlinedIcon />Event\n                  </MenuItem>\n                </Select>\n              </FormControl>\n              <InputLabel id=\"Link1\" Text=\"Link1\">\n                Link1 *\n              </InputLabel>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"Link1\">Link</InputLabel>\n                <Select labelId=\"Link1\" id=\"Link1\" label=\"Link1\">\n                  <MenuItem value=\"\" />\n                  <MenuItem value=\"Link\">Link</MenuItem>\n                  <MenuItem value=\"Link\">Link</MenuItem>\n                </Select>\n              </FormControl>\n\n              <InputLabel id=\"Link2\" Text=\"Link2\">\n                Link2 *\n              </InputLabel>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"Link2\">Link</InputLabel>\n                <Select labelId=\"Link2\" id=\"Link2\" label=\"Link2\" fullWidth>\n                  <MenuItem value=\"\" />\n                  <MenuItem value=\"Link\">Link</MenuItem>\n                  <MenuItem value=\"Link\">Link</MenuItem>\n                </Select>\n              </FormControl>\n              <InputLabel id=\"Link\" Text=\"Link\">\n                Name of Link *\n              </InputLabel>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Link\"\n                variant=\"outlined\"\n                fullWidth\n              />\n\n              {/*Update Color */}\n              <ColorPicker\n                width={400}\n                height={100}\n                color={color}\n                onChange={setColor}\n                dark\n              />\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              onClick={handleClose}\n              style={{ background: \"#adee82\" }}\n            >\n              Update\n            </Button>\n            <Button variant=\"contained\" onClick={handleClose} color=\"secondary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  );\n}\n","C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\Mern\\reducers\\posts.js",[],"C:\\Users\\lenovo\\Desktop\\MERNSTACK-MANGEMENT-master\\MERNSTACK-MANGEMENT-master\\client\\src\\Mern\\actions\\posts.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"79","replacedBy":"85"},{"ruleId":"81","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":18,"column":11,"nodeType":"89","messageId":"90","endLine":18,"endColumn":18},{"ruleId":"87","severity":1,"message":"91","line":3,"column":3,"nodeType":"89","messageId":"90","endLine":3,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":45,"column":31,"nodeType":"94","messageId":"95","endLine":45,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":75,"column":6,"nodeType":"98","endLine":75,"endColumn":9,"suggestions":"99"},{"ruleId":"87","severity":1,"message":"100","line":19,"column":14,"nodeType":"89","messageId":"90","endLine":19,"endColumn":21},{"ruleId":"87","severity":1,"message":"101","line":19,"column":23,"nodeType":"89","messageId":"90","endLine":19,"endColumn":29},{"ruleId":"87","severity":1,"message":"102","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":14},{"ruleId":"79","replacedBy":"103"},{"ruleId":"81","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":42,"column":3,"nodeType":"107","messageId":"108","endLine":42,"endColumn":14},{"ruleId":"87","severity":1,"message":"109","line":53,"column":21,"nodeType":"89","messageId":"90","endLine":53,"endColumn":33},{"ruleId":"87","severity":1,"message":"110","line":54,"column":20,"nodeType":"89","messageId":"90","endLine":54,"endColumn":31},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],["111"],["112"],"no-unused-vars","'opacity' is assigned a value but never used.","Identifier","unusedVar","'removeElements' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'elements'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'canDrop' is assigned a value but never used.","'isOver' is assigned a value but never used.","'Modal1' is defined but never used.",["111"],["112"],"no-dupe-keys","Duplicate key 'formControl'.","ObjectExpression","unexpected","'setFullWidth' is assigned a value but never used.","'setMaxWidth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [elements, p]",{"range":"116","text":"117"},[2220,2223],"[elements, p]"]